{"remainingRequest":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfFehlerhafteFolge.vue?vue&type=template&id=366444e0&scoped=true&ts=true","dependencies":[{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfFehlerhafteFolge.vue","mtime":1634655980539},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0iQ29kZXNFcmtlbm5lbiI+DQogICAgICA8cm91dGVyLWxpbmsgdG89Ii8iPkhhdXB0bWVuw7w8L3JvdXRlci1saW5rPiA8YnI+IDxicj4NCiAgICAgIEJpYmVyIEJvYiBlbnRzY2hlaWRldCBzaWNoLCBkYXMgV2V0dGVyIG1pdCBmb2xnZW5kZW4gWmVpY2hlbmZvbGdlbiB6dSBrb2RpZXJlbjogPGJyPg0KICAgICAgICANCiAgICAgIA0KICAgICAgPGRpdiBjbGFzcz0ia29kaWVydW5nZW4iPg0KICAgICAgICA8ZGl2IGNsYXNzPSJlcnN0ZS1yZWloZS1rb2RpZXJ1bmdlbiIgPiANCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2RlcyI+DQogICAgICAgICAgICA8ZGl2IHYtZm9yPSdpbmRleCBpbiA1JyA6a2V5PSdpbmRleCcgaWQ9ImluZGV4Ij4NCiAgICAgICAgICAgICAgPGltZyB2LWlmPSJudW1iZXJzWzBdW2luZGV4LTFdID09IDAiIHNyYz0iLi4vYXNzZXRzL3NtYWxsLWNsb3VkLnBuZyIgLz4NCiAgICAgICAgICAgICAgPGltZyB2LWVsc2UtaWY9Im51bWJlcnNbMF1baW5kZXgtMV0gPT0gMSIgc3JjPSIuLi9hc3NldHMvYmlnLWNsb3VkLnBuZyIgLz4NCiAgICAgICAgICAgICAgPGltZyB2LWVsc2Ugc3JjPSIuLi9hc3NldHMvZW1wdHkucG5nIiAvPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICA8ZGl2IGNsYXNzPSJiZXNjaHJlaWJ1bmciPg0KICAgICAgICAgICAgPGJyIC8+RXMgd2lyZCBzb25uaWcuDQogICAgICAgICAgPC9kaXY+DQogICAgICAgICAgDQogICAgICAgIDwvZGl2Pg0KDQogICAgICAgIDxkaXYgY2xhc3M9Inp3ZWl0ZS1yZWloZS1rb2RpZXJ1bmdlbiI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29kZXMiPg0KICAgICAgICAgICAgPGRpdiB2LWZvcj0naW5kZXggaW4gNScgOmtleT0naW5kZXgnPg0KICAgICAgICAgICAgICA8aW1nIHYtaWY9Im51bWJlcnNbMV1baW5kZXgtMV0gPT0gMCIgc3JjPSIuLi9hc3NldHMvc21hbGwtY2xvdWQucG5nIiAvPg0KICAgICAgICAgICAgICA8aW1nIHYtZWxzZS1pZj0ibnVtYmVyc1sxXVtpbmRleC0xXSA9PSAxIiBzcmM9Ii4uL2Fzc2V0cy9iaWctY2xvdWQucG5nIiAvPg0KICAgICAgICAgICAgICA8aW1nIHYtZWxzZSBzcmM9Ii4uL2Fzc2V0cy9lbXB0eS5wbmciIC8+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImJlc2NocmVpYnVuZyI+DQogICAgICAgICAgICA8YnIgLz5FcyB3aXJkIHJlZ25lbi4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0iZHJpdHRlLXJlaWhlLWtvZGllcnVuZ2VuIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2RlcyI+DQogICAgICAgICAgICA8ZGl2IHYtZm9yPSdpbmRleCBpbiA1JyA6a2V5PSdpbmRleCc+DQogICAgICAgICAgICAgIDxpbWcgdi1pZj0ibnVtYmVyc1syXVtpbmRleC0xXSA9PSAwIiBzcmM9Ii4uL2Fzc2V0cy9zbWFsbC1jbG91ZC5wbmciIC8+DQogICAgICAgICAgICAgIDxpbWcgdi1lbHNlLWlmPSJudW1iZXJzWzJdW2luZGV4LTFdID09IDEiIHNyYz0iLi4vYXNzZXRzL2JpZy1jbG91ZC5wbmciIC8+DQogICAgICAgICAgICAgIDxpbWcgdi1lbHNlIHNyYz0iLi4vYXNzZXRzL2VtcHR5LnBuZyIgLz4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgPGRpdiBjbGFzcz0iYmVzY2hyZWlidW5nIj4NCiAgICAgICAgICAgIDxiciAvPkVzIHdpcmQgc2NobmVpZW4uDQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KDQogICAgICAgIDxkaXYgY2xhc3M9InZpZXJ0ZS1yZWloZS1rb2RpZXJ1bmdlbiI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29kZXMiPg0KICAgICAgICAgICAgPGRpdiB2LWZvcj0naW5kZXggaW4gNScgOmtleT0naW5kZXgnPg0KICAgICAgICAgICAgICA8aW1nIHYtaWY9Im51bWJlcnNbM11baW5kZXgtMV0gPT0gMCIgc3JjPSIuLi9hc3NldHMvc21hbGwtY2xvdWQucG5nIiAvPg0KICAgICAgICAgICAgICA8aW1nIHYtZWxzZS1pZj0ibnVtYmVyc1szXVtpbmRleC0xXSA9PSAxIiBzcmM9Ii4uL2Fzc2V0cy9iaWctY2xvdWQucG5nIiAvPg0KICAgICAgICAgICAgICA8aW1nIHYtZWxzZSBzcmM9Ii4uL2Fzc2V0cy9lbXB0eS5wbmciIC8+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImJlc2NocmVpYnVuZyI+DQogICAgICAgICAgICA8YnIgLz5FcyB3aXJkIGhhZ2Vsbi4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj4NCiAgICAgIA0KICAgICAgPGJyPiBBbHMgZHUgQm9icyBTaWduYWxlIGFuZ2VzY2hhdXQgaGFzdCwgaGFzdCBkdSBlaW5lcyBkZXIgUmF1Y2h6ZWljaGVuIHZlcndlY2hzZWx0IHVuZCBzb21pdCBpc3QgZGllIHVudGVyZSBaZWljaGVuZm9sZ2UgZmVobGVyaGFmdC4gV2VsY2hlIEtvZGllcnVuZ2VuIHZvbiBvYmVuIGvDtm5udGUgZGFtaXQgZ2VtZWludCBzZWluPyA8YnI+IDxicj4NCg0KICAgICAgPGRpdiBjbGFzcz0iemVpY2hlbmZvbGdlIj4NCiAgICAgICAgPCEtLTxpbWcgdi1pZj0ic2VxX251bWJlcnNbMF1bMF0gPT0gMCIgc3JjPSIuLi9hc3NldHMvc21hbGwtY2xvdWQucG5nIiAvPg0KICAgICAgICA8aW1nIHYtaWY9InNlcV9udW1iZXJzWzBdWzBdID09IDEiIHNyYz0iLi4vYXNzZXRzL2JpZy1jbG91ZC5wbmciIC8+IC0tPg0KDQogICAgICAgIDxkaXYgdi1mb3I9ImkgaW4gNSIgOmtleT0iaSI+DQogICAgICAgICAgPGltZyB2LWlmPSJmYXVsdHlfYXJyYXlbaS0xXSA9PSAwIiBzcmM9Ii4uL2Fzc2V0cy9zbWFsbC1jbG91ZC5wbmciIC8+DQogICAgICAgICAgPGltZyB2LWVsc2UtaWY9ImZhdWx0eV9hcnJheVtpLTFdID09IDEiIHNyYz0iLi4vYXNzZXRzL2JpZy1jbG91ZC5wbmciIC8+DQogICAgICAgICAgPGltZyB2LWVsc2Ugc3JjPSIuLi9hc3NldHMvZW1wdHkucG5nIiBkcm9wcGFibGU9InRydWUiIC8+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9kaXY+DQoNCiAgICAgIDxwIGNsYXNzPSJhbnR3b3J0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic29ubmUiIHZhbHVlPSJzb25uZSIgdi1tb2RlbD0iYW5zX3dldHRlclswXSI+DQogICAgICAgIDxsYWJlbCBmb3I9InNvbm5lIj5FcyB3aXJkIHNvbm5pZy48L2xhYmVsPiA8YnI+DQogICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InJlZ2VuIiB2YWx1ZT0icmVnZW4iIHYtbW9kZWw9ImFuc193ZXR0ZXJbMV0iPg0KICAgICAgICA8bGFiZWwgZm9yPSJyZWdlbiI+RXMgd2lyZCByZWduZW4uPC9sYWJlbD4gPGJyPg0KICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzY2huZWUiIHZhbHVlPSJzY2huZWUiIHYtbW9kZWw9ImFuc193ZXR0ZXJbMl0iPg0KICAgICAgICA8bGFiZWwgZm9yPSJzY2huZWUiPkVzIHdpcmQgc2NobmVpZW4uPC9sYWJlbD4gPGJyPg0KICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJoYWdlbCIgdmFsdWU9ImhhZ2VsIiB2LW1vZGVsPSJhbnNfd2V0dGVyWzNdIj4NCiAgICAgICAgPGxhYmVsIGZvcj0iaGFnZWwiPkVzIHdpcmQgaGFnZWxuLjwvbGFiZWw+IDxicj4NCiAgICAgIDwvcD4NCg0KDQoNCiAgICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0ic3VibWl0QW5zd2VyKCkiPg0KICAgICAgICA8cD4NCiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4iIEBjbGljaz0ic3VibWl0QW5zd2VyKCkiDQogICAgICAgICAgICB0eXBlPSJidXR0b24iDQogICAgICAgICAgPg0KICAgICAgICAgIFByw7xmZSBBbnR3b3J0DQogICAgICAgICAgPC9idXR0b24+DQogICAgICAgIDwvcD4NCiAgICAgIDwvZm9ybT4NCg0KICAgICAgPHAgY2xhc3M9ImFucyIgdi1pZj0ic3VibWl0dGVkIj5EaWUgQW50d29ydCBpc3Qge3tyZXN1bHR9fTwvcD4NCg0KICAgIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfFehlerhafteFolge.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;MAGnF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cACtE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cACzE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAClC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cACtE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;cACzE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEtM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEtE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACpE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACvE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvvzE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAChD,CAAC,CAAC,CAAC;;;;MAIH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd;UACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEN,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE/D,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/musli/OneDrive/ETH/bsc_arbeit/code/algo-lernplattform/src/views/SfFehlerhafteFolge.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"CodesErkennen\">\r\n      <router-link to=\"/\">Hauptmenü</router-link> <br> <br>\r\n      Biber Bob entscheidet sich, das Wetter mit folgenden Zeichenfolgen zu kodieren: <br>\r\n        \r\n      \r\n      <div class=\"kodierungen\">\r\n        <div class=\"erste-reihe-kodierungen\" > \r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index' id=\"index\">\r\n              <img v-if=\"numbers[0][index-1] == 0\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[0][index-1] == 1\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird sonnig.\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div class=\"zweite-reihe-kodierungen\">\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[1][index-1] == 0\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[1][index-1] == 1\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird regnen.\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dritte-reihe-kodierungen\">\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[2][index-1] == 0\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[2][index-1] == 1\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird schneien.\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"vierte-reihe-kodierungen\">\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[3][index-1] == 0\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[3][index-1] == 1\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird hageln.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <br> Als du Bobs Signale angeschaut hast, hast du eines der Rauchzeichen verwechselt und somit ist die untere Zeichenfolge fehlerhaft. Welche Kodierungen von oben könnte damit gemeint sein? <br> <br>\r\n\r\n      <div class=\"zeichenfolge\">\r\n        <!--<img v-if=\"seq_numbers[0][0] == 0\" src=\"../assets/small-cloud.png\" />\r\n        <img v-if=\"seq_numbers[0][0] == 1\" src=\"../assets/big-cloud.png\" /> -->\r\n\r\n        <div v-for=\"i in 5\" :key=\"i\">\r\n          <img v-if=\"faulty_array[i-1] == 0\" src=\"../assets/small-cloud.png\" />\r\n          <img v-else-if=\"faulty_array[i-1] == 1\" src=\"../assets/big-cloud.png\" />\r\n          <img v-else src=\"../assets/empty.png\" droppable=\"true\" />\r\n        </div>\r\n      </div>\r\n\r\n      <p class=\"antwort\">\r\n        <input type=\"checkbox\" id=\"sonne\" value=\"sonne\" v-model=\"ans_wetter[0]\">\r\n        <label for=\"sonne\">Es wird sonnig.</label> <br>\r\n        <input type=\"checkbox\" id=\"regen\" value=\"regen\" v-model=\"ans_wetter[1]\">\r\n        <label for=\"regen\">Es wird regnen.</label> <br>\r\n        <input type=\"checkbox\" id=\"schnee\" value=\"schnee\" v-model=\"ans_wetter[2]\">\r\n        <label for=\"schnee\">Es wird schneien.</label> <br>\r\n        <input type=\"checkbox\" id=\"hagel\" value=\"hagel\" v-model=\"ans_wetter[3]\">\r\n        <label for=\"hagel\">Es wird hageln.</label> <br>\r\n      </p>\r\n\r\n\r\n\r\n      <form @submit.prevent=\"submitAnswer()\">\r\n        <p>\r\n          <button class=\"btn\" @click=\"submitAnswer()\"\r\n            type=\"button\"\r\n          >\r\n          Prüfe Antwort\r\n          </button>\r\n        </p>\r\n      </form>\r\n\r\n      <p class=\"ans\" v-if=\"submitted\">Die Antwort ist {{result}}</p>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'SfErstellen',\r\n  data() {\r\n    return {\r\n      numbers: [] as number[][],\r\n      submitted: false as boolean,\r\n      result: \"falsch.\",\r\n      faulty_array: [] as number[],\r\n      code_1: 0,\r\n      code_2: 0,\r\n      pos_1: 0,\r\n      pos_2: 0,\r\n      ans_wetter: [false,false,false,false] as boolean[],\r\n    }\r\n  },\r\n  created: function(){\r\n    this.createNumbers()\r\n    this.create4thNumberArray()\r\n  },\r\n  methods : {\r\n    submitAnswer(){\r\n      this.submitted = true\r\n      this.checkAnswer()\r\n    },\r\n    translate_code(str: string){\r\n      if(str == \"Es wird sonnig.\"){\r\n        return 1\r\n      } else if(str == \"Es wird regnen.\"){\r\n        return 2\r\n      } else {\r\n        return 3;\r\n      }\r\n    },\r\n    get_numbers_from_ans_wetter(){\r\n      var arr = []\r\n      for(let i = 0; i < this.ans_wetter.length; i++){\r\n        if(this.ans_wetter[i]){\r\n          arr.push(i)\r\n        }\r\n      }\r\n      return arr\r\n    },\r\n    sort_arr(arr: number[]){\r\n      //precondition: length(arr) € {1,2}\r\n      if(arr.length<=1){\r\n        return arr\r\n      } else{\r\n        var sorted_arr = []\r\n        if(arr[0] > arr[1]){\r\n          sorted_arr.push(arr[1])\r\n          sorted_arr.push(arr[0])\r\n        } else {\r\n          sorted_arr.push(arr[0])\r\n          sorted_arr.push(arr[1])\r\n        }\r\n        return sorted_arr\r\n      }\r\n      \r\n    },\r\n    compare_arrays(arr1: number[], arr2: number[]){   //returns true if arr1 is same as arr2, false otherwise\r\n      if(arr1.length != arr2.length){\r\n        return false;\r\n      } else{\r\n        arr1 = this.sort_arr(arr1)\r\n        arr2 = this.sort_arr(arr2)\r\n        var all_good = true;\r\n        for(let i = 0; i < arr1.length; i++){\r\n          all_good = all_good && (arr1[i]==arr2[i])     //of each element of arr1 and arr2 is the same, then all_good will stay true\r\n        }\r\n        return all_good\r\n      }\r\n    },\r\n    \r\n    checkAnswer(){\r\n      var ausgew_antworten = this.get_numbers_from_ans_wetter()\r\n      var richtige_antworten = [this.code_1,this.code_2]\r\n\r\n      var correct = this.compare_arrays(ausgew_antworten,richtige_antworten)\r\n\r\n      if(correct){\r\n        this.result = \"richtig.\"\r\n      } else {\r\n        this.result = \"falsch.\"\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    checkAbstand(arr1: number[], arr2: number[]){\r\n      let countAbstand = 0\r\n      for(let i = 0; i < 5; i++){\r\n        if((arr1[i] != arr2[i])){\r\n          countAbstand ++\r\n        }\r\n      }\r\n      return countAbstand\r\n    },\r\n\r\n    no_duplicates(){\r\n      //diese methode checkt, ob der abstand zwischen 2 codes mind. mindestAbstand ist, in dem fall return es true, sonst false\r\n      //fine_1 ist true, wenn code 1 und 2 sich an mind. mindestAbstand stelle unterscheiden\r\n      //fine_2 ist true, wenn code 1 und 3 sich an mind. mindestAbstand stelle unterscheiden\r\n      //fine_3 ist true, wenn code 2 und 3 sich an mind. mindestAbstand stelle unterscheiden\r\n      var mindestAbstand = 3\r\n\r\n      let fine_1 = false\r\n      let fine_2 = false\r\n      let fine_3 = false\r\n      \r\n      if(this.checkAbstand(this.numbers[0],this.numbers[1]) >= mindestAbstand){\r\n        fine_1 = true\r\n      }\r\n\r\n      if(this.checkAbstand(this.numbers[0],this.numbers[2]) >= mindestAbstand){\r\n        fine_2 = true\r\n      }\r\n\r\n      if(this.checkAbstand(this.numbers[1],this.numbers[2]) >= mindestAbstand){\r\n        fine_3 = true\r\n      }\r\n\r\n      return fine_1 && fine_2 && fine_3\r\n    },\r\n    \r\n    createNumbers(){\r\n      //zuerst wollen wir das array \"numbers\" befüllen\r\n      let new_array_o: number[][]\r\n      do {          //solange die codes nicht verschieden sind, wiederhole folgendes\r\n        console.log('duplikat gefunden, codes neu generiert')\r\n        new_array_o = []\r\n        for(let i = 0; i < 3; i++){\r\n          let new_array = []\r\n          for(let i = 0; i < 5; i++){\r\n            new_array.push(Math.round(Math.random()))\r\n          }\r\n          new_array_o.push(new_array)\r\n        }\r\n        this.numbers = new_array_o\r\n      } while(!(this.no_duplicates()));\r\n    },\r\n    create4thNumberArray(){\r\n      var idx_of_seq_to_replace = Math.floor((Math.random()*3))   //wähle zufällige stelle s \\in {0,1,2}\r\n      this.numbers.push(this.copyArray(this.numbers[idx_of_seq_to_replace]))      //füge am ende von this.numbers den s-ten array aus this.numbers an\r\n      \r\n      //mache 2 stellen k und l sodass k != l. an diesen stellen vertauschen wir die bits, sodass sich\r\n      //this.numbers[k] und this.numbers[l] an 2 stellen unterscheiden.\r\n      var k = Math.floor((Math.random()*5))\r\n      var l = Math.floor((Math.random()*5))\r\n      while(k == l){    //wichtig, dass k nicht gleich l ist\r\n        var l = Math.floor((Math.random()*5))\r\n      }\r\n\r\n      this.numbers[3][k] = (this.numbers[idx_of_seq_to_replace][k] == 1)? 0 : 1   //if in numbers[idx...] == 1, then 0 else 1 \r\n      this.faulty_array = this.copyArray(this.numbers[3])\r\n      this.numbers[3][l] = (this.numbers[idx_of_seq_to_replace][l] == 1)? 0 : 1\r\n\r\n      //jetzt haben wir zwei codes (nämlich numbers[idx_of_....] und numbers[3]), die sich an 2 stellen unterscheiden\r\n\r\n      this.code_1 = idx_of_seq_to_replace\r\n      this.code_2 = 3\r\n      this.pos_1 = k\r\n      this.pos_2 = l\r\n\r\n      this.shuffleNumbers()\r\n\r\n      console.log(\"k: %d;   l: %d\", k, l)\r\n      console.log(\"codes %d und %d unterscheiden sich an 2 stellen\", this.code_1+1, this.code_2+1)\r\n      console.log(this.numbers)\r\n      console.log(this.faulty_array)\r\n    },\r\n    shuffleNumbers(){\r\n      //ziel: code_1 und code_2 beide an zufällige positionen s und t (s != t) verschieben\r\n      //das stellt sicher, dass die zielcodes nicht immer an denselben stellen sind\r\n      var tmp_arr_0 = this.copyArray(this.numbers[0])\r\n      var tmp_arr_1 = this.copyArray(this.numbers[1])\r\n      var tmp_arr_2 = this.copyArray(this.numbers[2])\r\n      var tmp_arr_3 = this.copyArray(this.numbers[3])\r\n      \r\n      var permuted_positions = this.permutation()\r\n      this.code_1 = permuted_positions[this.code_1]   //update code_1 gem. permutation\r\n      this.code_2 = permuted_positions[this.code_2]   //update code_2 gem. permutation\r\n\r\n      this.numbers = []\r\n      this.numbers[permuted_positions[0]] = tmp_arr_0\r\n      this.numbers[permuted_positions[1]] = tmp_arr_1\r\n      this.numbers[permuted_positions[2]] = tmp_arr_2\r\n      this.numbers[permuted_positions[3]] = tmp_arr_3\r\n    },\r\n    permutation(){\r\n      var current_positions = [0,1,2,3]\r\n      var first = Math.floor((Math.random()*4))\r\n      var second = Math.floor((Math.random()*4))\r\n      while(first == second){\r\n        second = Math.floor((Math.random()*4))\r\n      }\r\n      var third = Math.floor((Math.random()*4))\r\n      while(third == first || third == second){\r\n        third = Math.floor((Math.random()*4))\r\n      }\r\n      var fourth = Math.floor((Math.random()*4))\r\n      while(fourth == first || fourth == second || fourth == third){\r\n        fourth = Math.floor((Math.random()*4))\r\n      }\r\n      current_positions[0] = first\r\n      current_positions[1] = second\r\n      current_positions[2] = third\r\n      current_positions[3] = fourth\r\n\r\n      console.log(\"permutation start\")\r\n      console.log(current_positions)\r\n      console.log(\"permutation finish\")\r\n      return current_positions\r\n    },\r\n    copyArray(arr1: number[]){\r\n      var newArr = []\r\n      for(let i = 0; i < arr1.length; i++){\r\n        newArr[i] = arr1[i]\r\n      }\r\n      return newArr\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .CodesErkennen{\r\n        background-color: #FFE5B2;\r\n        padding: 20px 20px 20px 20px;\r\n        width: 85%;\r\n        height: auto;\r\n        border-color: black;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n\r\n    img {\r\n      width: auto;\r\n      height: 50px;\r\n    }\r\n\r\n    .kodierungen {\r\n      /*background-color: #7CC7FF;*/\r\n      \r\n    }\r\n\r\n    .kodierungen div {\r\n      /*align-content: left;\r\n      align-items: left;\r\n      text-align: left;*/\r\n      display: flex;\r\n      padding: 10px 0 0 17%;\r\n    }\r\n\r\n    .beschreibung {\r\n      text-align: start;\r\n      padding: 0 0 0 15px !important;\r\n    }\r\n\r\n    input, select {\r\n      padding: 12px 20px;\r\n      margin: 8px 5px 0 0;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    }\r\n\r\n    .auswahl_tag {\r\n      display: block !important;\r\n    }\r\n\r\n    .auswahl {\r\n      display: block !important;\r\n    }\r\n\r\n    .codes {\r\n      display: flex !important;\r\n      \r\n    }\r\n\r\n    .codes div {\r\n      padding: 0 0 0 0 !important;\r\n    }\r\n\r\n    .zeichenfolge {\r\n      display: flex !important;\r\n      flex-wrap: wrap;\r\n      padding: 0 0 0 35% !important;\r\n    }\r\n\r\n\r\n</style>"]}]}