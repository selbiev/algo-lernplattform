{"remainingRequest":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen_schwer.vue?vue&type=style&index=0&id=5d5b3f62&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen_schwer.vue","mtime":1634580708362},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1632349277000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgI2Mgew0KICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7DQogICAgfQ0KDQogICAgLkNvZGVzRXJzdGVsbGVuew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZFNUIyOw0KICAgICAgICBwYWRkaW5nOiAyMHB4IDIwcHggMjBweCAyMHB4Ow0KICAgICAgICB3aWR0aDogODUlOw0KICAgICAgICBoZWlnaHQ6IGF1dG87DQogICAgICAgIGJvcmRlci1jb2xvcjogYmxhY2s7DQogICAgICAgIGJvcmRlci13aWR0aDogNXB4Ow0KICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkOw0KICAgICAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7DQogICAgfQ0KDQogICAgaW1nIHsNCiAgICAgIHdpZHRoOiBhdXRvOw0KICAgICAgaGVpZ2h0OiA1MHB4Ow0KICAgIH0NCg0KICAgIC5rb2RpZXJ1bmdlbiB7DQogICAgICAvKmJhY2tncm91bmQtY29sb3I6ICM3Q0M3RkY7Ki8NCiAgICAgIA0KICAgIH0NCg0KICAgIC5rb2RpZXJ1bmdlbiBkaXYgew0KICAgICAgLyphbGlnbi1jb250ZW50OiBsZWZ0Ow0KICAgICAgYWxpZ24taXRlbXM6IGxlZnQ7DQogICAgICB0ZXh0LWFsaWduOiBsZWZ0OyovDQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgcGFkZGluZzogMTBweCAwIDAgMTclOw0KICAgIH0NCg0KICAgIC5iZXNjaHJlaWJ1bmcgew0KICAgICAgdGV4dC1hbGlnbjogc3RhcnQ7DQogICAgICBwYWRkaW5nOiAwIDAgMCAxNXB4ICFpbXBvcnRhbnQ7DQogICAgfQ0KDQogICAgaW5wdXQsIHNlbGVjdCB7DQogICAgICBwYWRkaW5nOiAxMnB4IDIwcHg7DQogICAgICBtYXJnaW46IDhweCA1cHggMCAwOw0KICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICB9DQoNCiAgICAuYXVzd2FobF90YWcgew0KICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsNCiAgICB9DQoNCiAgICAuYXVzd2FobCB7DQogICAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7DQogICAgICBwYWRkaW5nOiAzcHggM3B4IDNweCAyNSU7DQogICAgfQ0KDQogICAgLmNvZGVzIHsNCiAgICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB9DQoNCiAgICAuY29kZXMgZGl2IHsNCiAgICAgIHBhZGRpbmc6IDAgMCAwIDAgIWltcG9ydGFudDsNCiAgICB9DQoNCiAgICAuemVpY2hlbmZvbGdlIHsNCiAgICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsNCiAgICAgIGZsZXgtd3JhcDogd3JhcDsNCiAgICAgIHBhZGRpbmc6IDAgMCAwIDEwJSAhaW1wb3J0YW50Ow0KICAgIH0NCg0KICAgIC5rbGVpZGVyIHsNCiAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgfQ0KDQogICAgLyouYW5zX2J1dHRvbiB7DQogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzNDQ0ZGOw0KICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgcGFkZGluZzogMTVweCAzMnB4Ow0KICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgZm9udC1zaXplOiAxNnB4Ow0KICAgICAgbWFyZ2luOiAwIDJweCAwIDA7DQogICAgfQ0KDQogICAgLmFuc19idXR0b246Zm9jdXMtd2l0aGluIHsgICAgIA0KICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzkxMzBGRjsgICAgDQogICAgfSovDQoNCg=="},{"version":3,"sources":["C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen_schwer.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACnB;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC","file":"C:/Users/musli/OneDrive/ETH/bsc_arbeit/code/algo-lernplattform/src/views/TopSortErkennen_schwer.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"CodesErstellen\">\r\n    <router-link to=\"/\">Hauptmen√º</router-link> <br> <br>\r\n    <img src=\"../assets/kleider/ohne_rand/Hose.png\" id=\"Hose\" style=\"display: none;\" lenx=\"333\" leny=\"111\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Socken.png\" id=\"Socken\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Schuhe.png\" id=\"Schuhe\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/T-Shirt.png\" id=\"T-Shirt\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Unterhose.png\" id=\"Unterhose\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Jacke.png\" id=\"Jacke\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/M√ºtze.png\" id=\"M√ºtze\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/G√ºrtel.png\" id=\"G√ºrtel\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Handschuhe.png\" id=\"Handschuhe\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Sonnenbrille.png\" id=\"Sonnenbrille\" style=\"display: none\"/>\r\n    <img src=\"../assets/kleider/ohne_rand/Pullover.png\" id=\"Pullover\" style=\"display: none\"/>\r\n\r\n    Wenn du dir Kleider anziehst, musst du die Reihenfolge beachten. <br>\r\n    Zum Beispiel T-Shirt &rarr; Jacke bedeutet: Zuerst muss das T-Shirt und erst dann die Jacke angezogen werden.<br> <br>\r\n    <canvas id=\"canvas\" width=\"500\" height=\"300\" style=\"border:1px solid #d3d3d3;\"></canvas> <br><br>\r\n    Du m√∂chtest die Kleider in der folgenden Reihenfolge anziehen. Ist das m√∂glich?  <br><br>\r\n    <div class=\"kleider\">\r\n      <div v-for='index in (top_ordering.length)' :key='index'>\r\n        <img v-if=\"top_ordering[index-1]==0\" src=\"../assets/kleider/Hose.png\" />\r\n        <img v-if=\"top_ordering[index-1]==1\" src=\"../assets/kleider/Socken.png\" />\r\n        <img v-if=\"top_ordering[index-1]==2\" src=\"../assets/kleider/Schuhe.png\" />\r\n        <img v-if=\"top_ordering[index-1]==3\" src=\"../assets/kleider/T-Shirt.png\" />\r\n        <img v-if=\"top_ordering[index-1]==4\" src=\"../assets/kleider/Unterhose.png\" />\r\n        <img v-if=\"top_ordering[index-1]==5\" src=\"../assets/kleider/Jacke.png\" />\r\n        <img v-if=\"top_ordering[index-1]==6\" src=\"../assets/kleider/M√ºtze.png\" />\r\n        <img v-if=\"top_ordering[index-1]==7\" src=\"../assets/kleider/G√ºrtel.png\" />\r\n        <img v-if=\"top_ordering[index-1]==8\" src=\"../assets/kleider/Handschuhe.png\" />\r\n        <img v-if=\"top_ordering[index-1]==9\" src=\"../assets/kleider/Sonnenbrille.png\" />\r\n        <img v-if=\"top_ordering[index-1]==10\" src=\"../assets/kleider/Pullover.png\" />\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <input type=\"radio\" id=\"true\" value=\"True\" name=\"answer_\" v-model=\"answer\">\r\n    <label for=\"true\">Ja</label>\r\n    <br>\r\n    <input type=\"radio\" id=\"false\" value=\"False\" name=\"answer_\" v-model=\"answer\">\r\n    <label for=\"false\">Nein</label>\r\n    <br>\r\n    <form @submit.prevent=\"submitAnswer() \">\r\n      <!-- <input v-model=\"prop_1\" type=\"number\" />\r\n      <input v-model=\"prop_2\" type=\"number\" />\r\n      <input v-model=\"prop_3\" type=\"number\" />\r\n      -->\r\n      <p>\r\n        <button @click=\"submitAnswer()\"\r\n          type=\"button\"\r\n        >\r\n        Pr√ºfe Antwort\r\n        </button>\r\n      </p>\r\n    </form>\r\n\r\n      <p v-if=\"submitted\">Die Antwort ist {{result}}</p>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'SfErstellen',\r\n  components: {\r\n    \r\n  },\r\n  data() {\r\n    return {\r\n      answer: false,\r\n      submitted: false,\r\n      result: \"falsch.\",\r\n      Q: [],\r\n      canvas: null,\r\n      ordering_correct: true,\r\n      top_ordering: [],\r\n      ctx: null,\r\n      message: \"Hello Vue!\",\r\n      vueCanvas: null,\r\n      painting: false,\r\n      images: [],\r\n      nodes: [\r\n        {id: 0, posX: 130, posY: 60, active: true, text: \"Hose\"},\r\n        {id: 1, posX: 270, posY: 130, active: true, text: \"Socken\"},\r\n        {id: 2, posX: 450, posY: 70, active: true, text: \"Schuhe\"},\r\n        {id: 3, posX: 440, posY: 185, active: true, text: \"T-Shirt\"},\r\n        {id: 4, posX: 45, posY: 125, active: true, text: \"Unterhose\"},\r\n        {id: 5, posX: 170, posY: 160, active: true, text: \"Jacke\"},\r\n        {id: 6, posX: 175, posY: 260, active: true, text: \"M√ºtze\"},\r\n        {id: 7, posX: 290, posY: 30, active: true, text: \"G√ºrtel\"},\r\n        {id: 8, posX: 55, posY: 200, active: true, text: \"Handschuhe\"},\r\n        {id: 9, posX: 420, posY: 280, active: true, text: \"Sonnenbrille\"},\r\n        {id: 10, posX: 290, posY: 200, active: true, text: \"Pullover\"}\r\n      ],\r\n      node_size: 15,\r\n      edges: [\r\n        /**brauchts id √ºberhaupt??? */\r\n        {id: 0, from_node: 0, to_node: 7},\r\n        {id: 0, from_node: 4, to_node: 0},\r\n        {id: 0, from_node: 1, to_node: 2},\r\n        {id: 0, from_node: 10, to_node: 5},\r\n        {id: 0, from_node: 3, to_node: 10},\r\n        {id: 0, from_node: 0, to_node: 2},\r\n        {id: 0, from_node: 10, to_node: 6},\r\n        {id: 0, from_node: 10, to_node: 9},\r\n        {id: 0, from_node: 5, to_node: 8},\r\n      ],\r\n      adj_list: [],   //klassische adjazenzliste, d.h. adj_list[i] = liste von nachbarsknoten von knoten i\r\n    }\r\n  },\r\n  mounted() {\r\n    //initialisierung des graphen\r\n    var canvas = document.getElementById(\"canvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    this.vueCanvas = ctx;\r\n    this.create_adj_list()\r\n    this.take_subset_of_nodes()   //nimm zuf√§llige teilmenge der nodes\r\n    \r\n    \r\n    this.keep_trans_relation()\r\n    this.connect_nodes()\r\n    \r\n    \r\n    //mit 50% wahrscheinlichkeit geben wir eine korrekte topologische sortierung\r\n    //und mit 50% geben wir eine zuf√§llige sortierung (vllt richtig vllt falsch) aus\r\n    //warum so? weil wenn wir immer eine zuf√§llige sortierung ausgeben, habe ich das gef√ºhl\r\n    //dass sie meistens falsch sein wird.\r\n    this.ordering_correct = (Math.round(Math.random())==1)? true : false\r\n    \r\n    if(this.ordering_correct){\r\n      this.create_valid_ordering()\r\n    } else {\r\n      this.create_random_ordering()\r\n    }\r\n\r\n    console.log(\"Die Sortierung ist %s\", this.ordering_correct? \"korrekt\" : \"m√∂glicherweise inkorrekt\")\r\n    //this.top_ordering = (this.ordering_correct)? this.create_valid_ordering() : this.create_random_ordering()\r\n    this.draw_nodes()\r\n    this.prepare_image_names()\r\n\r\n    \r\n    \r\n  },\r\n  props: {\r\n\r\n  },\r\n  methods : {\r\n    submitAnswer(){\r\n      var solution = this.check_ordering(this.top_ordering)\r\n      console.log(this.answer)\r\n      console.log(solution)\r\n      if(solution==true && this.answer==\"True\"){\r\n        this.result = \"korrekt.\"\r\n      } else if(solution==false && this.answer==\"False\"){\r\n        this.result = \"korrekt.\"\r\n      } else {\r\n        this.result = \"falsch.\"\r\n      }\r\n      this.submitted = true\r\n    },\r\n    prepare_image_names(){\r\n      //console.log(\"top ord len\")\r\n      //console.log(this.top_ordering)\r\n      for(let i = 0; i < this.top_ordering.length; i++){\r\n        var node = this.top_ordering[i]\r\n        //console.log(node)\r\n        var node_name = this.nodes[node].text + \".png\"\r\n        this.images.push(node_name)\r\n      }\r\n    },\r\n    draw_node(image, curr_node){\r\n\r\n    },\r\n    contained_in_to(node_number){\r\n      for(let i = 0; i < this.top_ordering.length; i++){\r\n        \r\n        if(this.top_ordering[i]==node_number){\r\n          \r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    draw_nodes(){\r\n      var ctx = this.vueCanvas\r\n      //console.log(this.top_ordering)\r\n      var image1 = document.getElementById('Hose');\r\n      var image2 = document.getElementById('Socken')\r\n      var image3 = document.getElementById('Schuhe')\r\n      var image4 = document.getElementById('T-Shirt')\r\n      var image5 = document.getElementById('Unterhose')\r\n      var image6 = document.getElementById('Jacke')\r\n      var image7 = document.getElementById('M√ºtze')\r\n      var image8 = document.getElementById('G√ºrtel')\r\n      var image9 = document.getElementById('Handschuhe')\r\n      var image10 = document.getElementById('Sonnenbrille')\r\n      var image11 = document.getElementById('Pullover')\r\n\r\n      var x_offset = -20\r\n      var y_offset = -25\r\n      if(this.contained_in_to(0)){\r\n        image1.addEventListener('load', e => {\r\n          ctx.drawImage(image1, this.nodes[0].posX + x_offset, this.nodes[0].posY + y_offset);\r\n        });\r\n      } \r\n\r\n      if(this.contained_in_to(1)){\r\n        image2.addEventListener('load', e => {\r\n          ctx.drawImage(image2, this.nodes[1].posX + x_offset, this.nodes[1].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(2)){\r\n        image3.addEventListener('load', e => {\r\n          ctx.drawImage(image3, this.nodes[2].posX + x_offset, this.nodes[2].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(3)){\r\n        image4.addEventListener('load', e => {\r\n          ctx.drawImage(image4, this.nodes[3].posX + x_offset, this.nodes[3].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(4)){\r\n        image5.addEventListener('load', e => {\r\n          ctx.drawImage(image5, this.nodes[4].posX + x_offset, this.nodes[4].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(5)){\r\n        image6.addEventListener('load', e => {\r\n          ctx.drawImage(image6, this.nodes[5].posX + x_offset, this.nodes[5].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(6)){\r\n        image7.addEventListener('load', e => {\r\n          ctx.drawImage(image7, this.nodes[6].posX + x_offset, this.nodes[6].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(7)){\r\n        image8.addEventListener('load', e => {\r\n          ctx.drawImage(image8, this.nodes[7].posX + x_offset, this.nodes[7].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(8)){\r\n        image9.addEventListener('load', e => {\r\n          ctx.drawImage(image9, this.nodes[8].posX + x_offset, this.nodes[8].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(9)){\r\n        image10.addEventListener('load', e => {\r\n          ctx.drawImage(image10, this.nodes[9].posX + x_offset, this.nodes[9].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      if(this.contained_in_to(10)){\r\n        image11.addEventListener('load', e => {\r\n          ctx.drawImage(image11, this.nodes[10].posX + x_offset, this.nodes[10].posY + y_offset);\r\n        });\r\n      }\r\n\r\n      var n = this.nodes.length\r\n      //var asdf = this.nodes.push({id: 16, posX: 1360, posY: 1330})\r\n      for(let i = 0; i < n; i++){\r\n        var curr_node = this.nodes[i]\r\n        if(!curr_node.active){\r\n          continue\r\n        }\r\n        /*var image = document.getElementById(curr_node.text)\r\n        console.log(image)\r\n        image.addEventListener('load', e => {\r\n          ctx.drawImage(image, curr_node.posX, curr_node.posY);\r\n        });*/\r\n        /*ctx.beginPath()\r\n        ctx.arc(curr_node.posX, curr_node.posY, this.node_size, 0, 2 * Math.PI)\r\n        ctx.fillStyle = \"#1490a3\";\r\n        ctx.fill();\r\n        ctx.font = \"12px Georgia\";\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(curr_node.id + \": \" + curr_node.text,curr_node.posX-18,curr_node.posY+30)\r\n        ctx.stroke()*/\r\n      }\r\n    },\r\n    make_edge(ctx, u, v){\r\n      ctx.beginPath()\r\n      this.canvas_arrow(ctx, u.posX, u.posY, v.posX, v.posY);\r\n      //console.log(\"edge (%d,%d) made\",u.id, v.id)\r\n      ctx.stroke()\r\n    },\r\n    connect_nodes(){\r\n      var ctx = this.vueCanvas\r\n\r\n      var ctx = this.vueCanvas\r\n      var m = this.edges.length\r\n      \r\n      for(let i = 0; i < m; i++) {\r\n        var e = this.edges[i]\r\n        var u = this.nodes[(e.from_node)]\r\n        var v = this.nodes[(e.to_node)]\r\n        if(u.active && v.active){\r\n          this.make_edge(ctx,u,v)\r\n        }\r\n      }\r\n    },\r\n    create_adj_list(){\r\n      for(let i = 0; i < this.nodes.length; i++){\r\n        this.adj_list.push([])    //initiale, leere nachbarsliste von jedem knoten\r\n      }\r\n\r\n      for(let i = 0; i < this.edges.length; i++){\r\n        var e = this.edges[i]\r\n        var u = this.nodes[e.from_node]\r\n        var v = this.nodes[e.to_node]\r\n        \r\n        \r\n        if(u.active && v.active){\r\n          this.adj_list[u.id].push(v.id)\r\n        }\r\n        \r\n      }\r\n    },\r\n    edges_contains(u,v){\r\n      for(let i = 0; i < this.edges.length; i++){\r\n        if(this.edges[i].from_node==u && this.edges[i].to_node==v){\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    /**\r\n     * diese funktion hat zum ziel, dass wenn z.B. (a) -> (b) -> (c) abh√§ngigkeiten bestehen und (b)\r\n     * nicht aktiviert wurde, dass trotzdem die relation (a) -> (c) beibehalten wird, f√ºr den ganzen graphen\r\n     * den algorithmus habe ich woanders dokumentiert, ich erkl√§re ihn hier nicht\r\n     */\r\n    keep_trans_relation(){\r\n      for(let i = 0; i < this.edges.length; i++){\r\n        var e = this.edges[i]\r\n        var u = e.from_node\r\n        var v = e.to_node\r\n        if((this.nodes[u].active) && !(this.nodes[v].active)){\r\n            \r\n          //bzgl. push() und pop() funktioniert der array wie ein stack. das kommt uns gelegen,\r\n          //weil wir eine tiefensuche machen m√∂chten\r\n          var Q = []  \r\n          var neighbours = this.adj_list[this.nodes[u].id]\r\n          for(let j = 0; j < neighbours.length; j++){\r\n            Q.push(neighbours[j])\r\n          }\r\n          while(!(Q.length <= 0)){\r\n            var node = Q.pop()\r\n            if(this.nodes[node].active){\r\n              if(!this.edges_contains(u,node)){\r\n                this.edges.push({id:0, from_node: u, to_node: node})\r\n                this.adj_list[u].push(node)\r\n\r\n              }\r\n              //this.make_trans_edge(u,node)\r\n            } else {\r\n              var neighbours_node = this.adj_list[node]\r\n              for(let j = 0; j < neighbours_node.length; j++){\r\n                Q.push(neighbours_node[j])\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    take_subset_of_nodes(){\r\n      for(let i = 0; i < this.nodes.length; i++){\r\n        \r\n        //aktiviere den knoten mit 50% wahrscheinlichkeit\r\n        this.nodes[i].active = (Math.round(Math.random())==1)? true : false\r\n      }\r\n      //this.keep_trans_relation()  //stelle sicher, dass transitive abh√§ngigkeiten bewahrt werden\r\n    },\r\n    create_in_degrees(){\r\n      var in_degrees = []\r\n      for(let i = 0; i < this.nodes.length; i++){\r\n        in_degrees.push(0)\r\n      }\r\n      for(let i = 0; i < this.edges.length; i++){\r\n        var u = this.edges[i].from_node;\r\n        var v = this.edges[i].to_node;\r\n        if(this.nodes[u].active && this.nodes[v].active){\r\n          in_degrees[v]++\r\n        }\r\n      }\r\n      return in_degrees\r\n    },\r\n    /**\r\n     * nimmt eine topologische sortierung und gibt true zur√ºck, wenn sie korrekt ist und false andernfalls\r\n     */\r\n    check_ordering(ordering){\r\n      var in_degrees = this.create_in_degrees()\r\n      //console.log(\"in_degrees und adj_list jetzt\")\r\n      //console.log(in_degrees)\r\n      //console.log(ordering)\r\n      \r\n      for(let i = 0; i < ordering.length; i++){\r\n        var node = ordering[i]\r\n        //console.log(\"%d wird angeschaut\", node)\r\n        if(in_degrees[node]>0){   //wenns eine kante auf sich zeigen hat, darf knoten noch nicht genommen werden\r\n          //console.log(\"in_degrees[%d] > 0, returne false\",node)\r\n          return false\r\n        }\r\n        //console.log(\"in_degrees[%d] <= 0, mache weiter\",node)\r\n        //console.log(\"jetzt schauen wir die nachbarn von %d an\",node)\r\n        for(let j = 0; j < this.adj_list[node].length; j++){\r\n          var neighbour = this.adj_list[node][j]\r\n          //console.log(\"nachbar %d gefunden. dessen degree ist zuerst %d\",neighbour,in_degrees[neighbour])\r\n          in_degrees[neighbour]--\r\n          //console.log(\"in_degrees[%d] ist jetzt %d\", neighbour, in_degrees[neighbour])\r\n        }\r\n      }\r\n\r\n      return true\r\n    },\r\n\r\n    create_random_ordering(){\r\n      var ordering = []\r\n      var num_active_nodes = 0\r\n      var active_nodes = []\r\n      var already_taken = []\r\n      for(let i = 0; i < this.nodes.length; i++){\r\n        if(this.nodes[i].active){\r\n          num_active_nodes++\r\n          active_nodes.push(i)\r\n        }\r\n        already_taken.push(false)\r\n      }\r\n      while(ordering.length < num_active_nodes){\r\n        var n = this.nodes.length\r\n        var next_in_ordering = Math.floor(Math.random()*n)\r\n        next_in_ordering = (next_in_ordering>=n)? next_in_ordering-1 : next_in_ordering    //in rare situations, Math.random() might be exactly 1\r\n        if(this.nodes[next_in_ordering].active && !already_taken[next_in_ordering]){\r\n          ordering.push(next_in_ordering)\r\n          already_taken[next_in_ordering] = true\r\n        }\r\n      }\r\n      //console.log(ordering)\r\n      this.top_ordering = ordering\r\n    },\r\n\r\n    create_valid_ordering(){\r\n      var num_active_nodes = 0\r\n      for(let i = 0; i < this.nodes.length; i++){\r\n        if(this.nodes[i].active){\r\n          num_active_nodes++\r\n        }\r\n      }\r\n      var in_degrees = this.create_in_degrees()\r\n      var top_ordering = []\r\n      for(let k = 0; k < num_active_nodes; k++){\r\n        for(let i = 0; i < in_degrees.length; i++){\r\n          var node = i\r\n          if(this.nodes[node].active && in_degrees[i]==0){\r\n            top_ordering.push(node)\r\n            in_degrees[i] = -1\r\n\r\n            for(let j = 0; j < this.adj_list[node].length; j++){\r\n              var neighbour = this.adj_list[node][j]\r\n              //console.log(\"nachbar %d gefunden. dessen degree ist zuerst %d\",neighbour,in_degrees[neighbour])\r\n              in_degrees[neighbour]--\r\n              //console.log(\"in_degrees[%d] ist jetzt %d\", neighbour, in_degrees[neighbour])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.top_ordering = top_ordering\r\n    },\r\n\r\n\r\n    define_ratio(dx, dy){\r\n      var len = Math.abs(dx)+Math.abs(dy)\r\n      if(len>=400){\r\n        return 0.86\r\n      } else {\r\n        return (0.0012*len + 0.46)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * das meiste von diesem code habe ich aus stackoverflow\r\n     * https://stackoverflow.com/questions/808826/draw-arrow-on-canvas-tag\r\n     * die erste antwort. weil ich aber wollte, dass die pfeile nicht bis\r\n     * zur mitte der knoten gehen (sieht nicht gut aus) habe ich noch\r\n     * einen faktor (ratio) definiert, der die pfeile k√ºrzer macht.\r\n     * weil das nicht gleich funktioniert f√ºr lange und kurze pfeile, habe ich\r\n     * zwei extreme gr√∂ssen (lange und kurzer pfeil) genommen und geschaut,\r\n     * welche faktoren f√ºr sie eignen und dann den rest interpoliert.\r\n     * die lineare funktion davon ist in define_ratio().\r\n     */\r\n    canvas_arrow(ctx, fromx, fromy, tox, toy) {\r\n      var dX = tox-fromx\r\n      var dY = toy-fromy\r\n      var ratio = this.define_ratio(dX,dY)\r\n      tox = fromx + ((ratio)*dX)\r\n      toy = fromy + ((ratio)*dY)\r\n      var headlen = 10; // length of head in pixels     ab hier code aus internet, bis hier eigener code\r\n      var dx = tox - fromx;\r\n      var dy = toy - fromy;\r\n      var angle = Math.atan2(dy, dx);\r\n      ctx.moveTo(fromx, fromy);\r\n      ctx.lineTo(tox, toy);\r\n      ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n      ctx.moveTo(tox, toy);\r\n      ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n    #c {\r\n      border: 1px solid black;\r\n    }\r\n\r\n    .CodesErstellen{\r\n        background-color: #FFE5B2;\r\n        padding: 20px 20px 20px 20px;\r\n        width: 85%;\r\n        height: auto;\r\n        border-color: black;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n\r\n    img {\r\n      width: auto;\r\n      height: 50px;\r\n    }\r\n\r\n    .kodierungen {\r\n      /*background-color: #7CC7FF;*/\r\n      \r\n    }\r\n\r\n    .kodierungen div {\r\n      /*align-content: left;\r\n      align-items: left;\r\n      text-align: left;*/\r\n      display: flex;\r\n      padding: 10px 0 0 17%;\r\n    }\r\n\r\n    .beschreibung {\r\n      text-align: start;\r\n      padding: 0 0 0 15px !important;\r\n    }\r\n\r\n    input, select {\r\n      padding: 12px 20px;\r\n      margin: 8px 5px 0 0;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    }\r\n\r\n    .auswahl_tag {\r\n      display: block !important;\r\n    }\r\n\r\n    .auswahl {\r\n      display: flex !important;\r\n      padding: 3px 3px 3px 25%;\r\n    }\r\n\r\n    .codes {\r\n      display: flex !important;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .codes div {\r\n      padding: 0 0 0 0 !important;\r\n    }\r\n\r\n    .zeichenfolge {\r\n      display: flex !important;\r\n      flex-wrap: wrap;\r\n      padding: 0 0 0 10% !important;\r\n    }\r\n\r\n    .kleider {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    /*.ans_button {\r\n      background-color: #33CCFF;\r\n      border: none;\r\n      color: white;\r\n      padding: 15px 32px;\r\n      text-align: center;\r\n      text-decoration: none;\r\n      display: inline-block;\r\n      font-size: 16px;\r\n      margin: 0 2px 0 0;\r\n    }\r\n\r\n    .ans_button:focus-within {     \r\n      background-color: #9130FF;    \r\n    }*/\r\n\r\n</style>\r\n"]}]}