{"remainingRequest":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfErgaenzen_mittel.vue?vue&type=style&index=0&id=52c37c3c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfErgaenzen_mittel.vue","mtime":1634658135758},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1632349277000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLkNvZGVzRXJnYWVuemVuew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZFNUIyOw0KICAgICAgICBwYWRkaW5nOiAyMHB4IDIwcHggMjBweCAyMHB4Ow0KICAgICAgICB3aWR0aDogODUlOw0KICAgICAgICBoZWlnaHQ6IGF1dG87DQogICAgICAgIGJvcmRlci1jb2xvcjogYmxhY2s7DQogICAgICAgIGJvcmRlci13aWR0aDogNXB4Ow0KICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkOw0KICAgICAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7DQogICAgfQ0KDQogICAgaW1nIHsNCiAgICAgIHdpZHRoOiBhdXRvOw0KICAgICAgaGVpZ2h0OiA1MHB4Ow0KICAgIH0NCg0KICAgIC5rb2RpZXJ1bmdlbiB7DQogICAgICAvKmJhY2tncm91bmQtY29sb3I6ICM3Q0M3RkY7Ki8NCiAgICAgIA0KICAgIH0NCg0KICAgIC5rb2RpZXJ1bmdlbiBkaXYgew0KICAgICAgLyphbGlnbi1jb250ZW50OiBsZWZ0Ow0KICAgICAgYWxpZ24taXRlbXM6IGxlZnQ7DQogICAgICB0ZXh0LWFsaWduOiBsZWZ0OyovDQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgcGFkZGluZzogMTBweCAwIDAgMTclOw0KICAgIH0NCg0KICAgIC5iZXNjaHJlaWJ1bmcgew0KICAgICAgdGV4dC1hbGlnbjogc3RhcnQ7DQogICAgICBwYWRkaW5nOiAwIDAgMCAxNXB4ICFpbXBvcnRhbnQ7DQogICAgfQ0KDQogICAgaW5wdXQsIHNlbGVjdCB7DQogICAgICBwYWRkaW5nOiAxMnB4IDIwcHg7DQogICAgICBtYXJnaW46IDhweCA1cHggMCAwOw0KICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICB9DQoNCiAgICAuYXVzd2FobF90YWcgew0KICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsNCiAgICB9DQoNCiAgICAuYXVzd2FobCB7DQogICAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7DQogICAgICBwYWRkaW5nOiAzcHggM3B4IDNweCAyNSU7DQogICAgfQ0KDQogICAgLmNvZGVzIHsNCiAgICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsNCiAgICAgIA0KICAgIH0NCg0KICAgIC5jb2RlcyBkaXYgew0KICAgICAgcGFkZGluZzogMCAwIDAgMCAhaW1wb3J0YW50Ow0KICAgIH0NCg0KICAgIC56ZWljaGVuZm9sZ2Ugew0KICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICB9DQoNCiAgICAuZHJvcC1zbG90IHsNCiAgICAgIGhlaWdodDogNDBweDsNCiAgICAgIHdpZHRoOiA2MHB4Ow0KICAgICAgcGFkZGluZzogMCA3cHggMTBweCA3cHg7DQogICAgICBtYXJnaW46IDAgMnB4IDAgMDsNCiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOw0KICAgIH0NCg0KICAgIC5zdGFydC1hcmVhew0KICAgICAgd2lkdGg6IDI1JTsNCiAgICAgIG1pbi1oZWlnaHQ6IDMwcHg7DQogICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsNCiAgICAgIG1hcmdpbjogMCBhdXRvOw0KICAgIH0NCg0K"},{"version":3,"sources":["C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\SfErgaenzen_mittel.vue"],"names":[],"mappings":"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","file":"C:/Users/musli/OneDrive/ETH/bsc_arbeit/code/algo-lernplattform/src/views/SfErgaenzen_mittel.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"CodesErgaenzen\">\r\n        <router-link to=\"/\">Hauptmenü</router-link> <br> <br>\r\n      Biber Bob sendet folgende Rauchzeichen, um das Wetter für einen Tag vorauszusagen. <br>\r\n        <!-- Automatisierte Version, man muss einfach den css noch anpassen -->\r\n        \r\n      \r\n      <div class=\"kodierungen\">\r\n        <div class=\"erste-reihe-kodierungen\" >\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[0][index-1] == 0 && number_set[0][index-1]\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[0][index-1] == 1 && number_set[0][index-1]\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird sonnig.\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div class=\"zweite-reihe-kodierungen\">\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[1][index-1] == 0 && number_set[1][index-1]\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[1][index-1] == 1 && number_set[1][index-1]\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird regnen.\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dritte-reihe-kodierungen\">\r\n          <div class=\"codes\">\r\n            <div v-for='index in 5' :key='index'>\r\n              <img v-if=\"numbers[2][index-1] == 0 && number_set[2][index-1]\" src=\"../assets/small-cloud.png\" />\r\n              <img v-else-if=\"numbers[2][index-1] == 1 && number_set[2][index-1]\" src=\"../assets/big-cloud.png\" />\r\n              <img v-else src=\"../assets/empty.png\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"beschreibung\">\r\n            <br />Es wird schneien.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <br> Um das Wetter für morgen vorauszusagen, sendet Bob die folgenden Zeichen. Der Wind hat leider einige Zeichen verwischt. Ergänze sie! <br> <br>\r\n\r\n      <div class=\"zeichenfolge\">\r\n        <!--<img v-if=\"seq_numbers[0][0] == 0\" src=\"../assets/small-cloud.png\" />\r\n        <img v-if=\"seq_numbers[0][0] == 1\" src=\"../assets/big-cloud.png\" /> -->\r\n\r\n        <div v-for=\"i in 5\" :key=\"i\">\r\n          <img v-if=\"seq_numbers[0][i-1] == 0 && number_seq_set[0][i-1]\" src=\"../assets/small-cloud.png\" />\r\n          <img v-else-if=\"seq_numbers[0][i-1] == 1 && number_seq_set[0][i-1]\" src=\"../assets/big-cloud.png\" />\r\n          <div v-else droppable=\"true\" class=\"drop-slot\" id=\"drop-slot\" @drop=\"drop($event, i)\" @dragover=\"allowDrop($event)\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <br> Ziehe die Rauchzeichen in die Lücken. Um zu korrigieren, ziehe sie wieder zurück. <br> <br>\r\n\r\n      <div class=\"start-area\" id=\"start-area\" @dragover=\"allowDrop($event)\" @drop=\"drop($event, 1)\">\r\n        <img id=\"big-cloud-1\" src=\"../assets/big-cloud.png\" draggable=\"true\" @dragstart=\"drag($event)\" width=\"336\" height=\"69\">\r\n        <img id=\"big-cloud-2\" src=\"../assets/big-cloud.png\" draggable=\"true\" @dragstart=\"drag($event)\" width=\"336\" height=\"69\">\r\n        <img id=\"small-cloud-1\" src=\"../assets/small-cloud.png\" draggable=\"true\" @dragstart=\"drag($event)\" width=\"336\" height=\"69\">\r\n        <img id=\"small-cloud-2\" src=\"../assets/small-cloud.png\" draggable=\"true\" @dragstart=\"drag($event)\" width=\"336\" height=\"69\">\r\n      </div>\r\n\r\n       <p>\r\n          <button @click=\"submitAnswer()\"\r\n            type=\"button\"\r\n          >\r\n          Prüfe Antwort\r\n          </button>\r\n        </p>\r\n      <!--<img id=\"remove\" src=\"../assets/remove.png\" @dragover=\"allowDrop($event)\" @drop=\"drop($event, '1')\" width=\"336\" height=\"69\">-->\r\n    <p v-if=\"submitted\">Die Antwort ist {{result}}</p>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'SfErstellen',\r\n  data() {\r\n    return {\r\n      numbers: [] as number[][],\r\n      anz_tage: 3,\r\n      seq_numbers: [] as number[][],\r\n      number_set: [] as boolean[][],\r\n      number_seq_set: [] as boolean[][],\r\n      zahl_1: 0,\r\n      zahl_2: 0,\r\n      zahl_3: 0,\r\n      auswahl_1: \"none\",\r\n      auswahl_2: \"none\",\r\n      auswahl_3: \"none\",\r\n      gap_1: 0,\r\n      gap_2: 0,\r\n      submitted: false as boolean,\r\n      result: \"falsch.\",\r\n      selected_1: \"\",\r\n      selected_2: \"\",\r\n      selected_3: \"\",\r\n      slots: [-1,-1,-1,-1,-1] as number[],\r\n    }\r\n  },\r\n  created: function(){\r\n    this.createNumbers()\r\n    this.createRandomSequence()\r\n  },\r\n  props: {\r\n    msg: String\r\n  },\r\n  methods : {\r\n    translate_ans(answer: string){\r\n      if(answer.charAt(0)=='s'){\r\n        return 0\r\n      } else if(answer.charAt(0)=='b'){\r\n        return 1\r\n      } else {return -1}\r\n    },\r\n    submitAnswer(){\r\n      var slots_ok = [true,true,true,true,true];\r\n      console.log(this.seq_numbers)\r\n      for(let i = 0; i < this.slots.length; i++){\r\n        if(this.slots[i] != -1){\r\n          slots_ok[i] = false\r\n          var ans_slot_i = this.slots[i]\r\n          console.log(\"slot is: %d;   antwort für dieses slot ist: %d\", i, ans_slot_i)\r\n          \r\n          if(this.seq_numbers[0][i] == ans_slot_i){\r\n            slots_ok[i] = true\r\n          }\r\n        } \r\n      }\r\n\r\n      var ans_corr = true\r\n      for(let i = 0; i < 5; i++){\r\n        ans_corr = ans_corr && slots_ok[i]\r\n      }\r\n\r\n      this.result = ans_corr? \"richtig.\" : \"falsch.\"\r\n      this.submitted = true\r\n    },\r\n    drag(event: any){\r\n      event.dataTransfer.setData(\"text\", event.target.id);\r\n    },\r\n    drop(event: any, detail: number) {\r\n      event.preventDefault();\r\n      var data = event.dataTransfer.getData(\"text\");\r\n      var node = document.getElementById(data)\r\n      event.target.appendChild(node);\r\n      var cloud = event.dataTransfer.getData(\"text\")\r\n      this.slots[detail-1] = this.translate_ans(cloud)\r\n      //var slot = event.toElement.id\r\n      \r\n    },\r\n    allowDrop(event: any) {\r\n      event.preventDefault();\r\n    },\r\n    translate_code(str: string){\r\n      if(str == \"Es wird sonnig.\"){\r\n        return 1\r\n      } else if(str == \"Es wird regnen.\"){\r\n        return 2\r\n      } else {\r\n        return 3;\r\n      }\r\n    },\r\n    checkAbstand(arr1: number[], arr2: number[]){\r\n      let countAbstand = 0\r\n      for(let i = 0; i < 5; i++){\r\n        if((arr1[i] != arr2[i])){\r\n          countAbstand ++\r\n        }\r\n      }\r\n      return countAbstand\r\n    },\r\n    no_duplicates(){\r\n      //diese methode checkt, ob der abstand zwischen 2 codes mind. mindestAbstand ist, in dem fall return es true, sonst false\r\n      //fine_1 ist true, wenn code 1 und 2 sich an mind. mindestAbstand stelle unterscheiden\r\n      //fine_2 ist true, wenn code 1 und 3 sich an mind. mindestAbstand stelle unterscheiden\r\n      //fine_3 ist true, wenn code 2 und 3 sich an mind. mindestAbstand stelle unterscheiden\r\n      var mindestAbstand = 3\r\n\r\n      let fine_1 = false\r\n      let fine_2 = false\r\n      let fine_3 = false\r\n      \r\n      if(this.checkAbstand(this.numbers[0],this.numbers[1]) >= mindestAbstand){\r\n        fine_1 = true\r\n      }\r\n\r\n      if(this.checkAbstand(this.numbers[0],this.numbers[2]) >= mindestAbstand){\r\n        fine_2 = true\r\n      }\r\n\r\n      if(this.checkAbstand(this.numbers[1],this.numbers[2]) >= mindestAbstand){\r\n        fine_3 = true\r\n      }\r\n\r\n      return fine_1 && fine_2 && fine_3\r\n    },\r\n    \r\n    createNumbers(){\r\n      //zuerst wollen wir das array \"numbers\" befüllen\r\n      let new_array_o: number[][]\r\n      do {          //solange die codes nicht verschieden sind, wiederhole folgendes\r\n        console.log('duplikat gefunden, codes neu generiert')\r\n        console.log(this.numbers)\r\n        new_array_o = []\r\n        for(let i = 0; i < 3; i++){\r\n          let new_array = []\r\n          for(let i = 0; i < 5; i++){\r\n            new_array.push(Math.round(Math.random()))\r\n          }\r\n          new_array_o.push(new_array)\r\n        }\r\n        this.numbers = new_array_o\r\n      } while(!(this.no_duplicates()));\r\n      \r\n      //jetzt das array number_set, das sagt aus, ob eine zahl/eine stelle \r\n      //in den kodierungen bekannt ist oder nicht (für lückentext)\r\n      let new_array_s: boolean[][] = []\r\n      for(let i = 0; i < 3; i++){\r\n        let new_array_ss = []\r\n        for(let i = 0; i < 5; i++){\r\n          new_array_ss.push(true)\r\n        }\r\n        new_array_s.push(new_array_ss)\r\n      }\r\n      this.number_set = new_array_s\r\n      \r\n      //jetzt das array number_seq_set, das sagt aus, ob eine zahl/eine stelle \r\n      //in den sequenzen/zeichenfolge bekannt ist oder nicht (für lückentext)\r\n      let new_array_s_s: boolean[][] = []\r\n      for(let i = 0; i < 3; i++){\r\n        let new_array_ss_s = []\r\n        for(let i = 0; i < 5; i++){\r\n          new_array_ss_s.push(true)\r\n        }\r\n        new_array_s_s.push(new_array_ss_s)\r\n      }\r\n      this.number_seq_set = new_array_s_s\r\n      this.gap_1 = Math.floor((Math.random()*5))\r\n      this.gap_2 = Math.floor((Math.random()*5))\r\n      while(this.gap_1 == this.gap_2){\r\n        this.gap_2 = Math.floor((Math.random()*5))\r\n      }\r\n      this.number_seq_set[0][this.gap_1] = false\r\n      this.number_seq_set[0][this.gap_2] = false\r\n      console.log(\"gap_1 = %d\",this.gap_1)\r\n      console.log(\"gap_2 = %d\",this.gap_2)\r\n    },\r\n    createRandomSequence(){\r\n      this.zahl_1 = Math.floor(1 + (Math.random()*3))\r\n      this.seq_numbers.push(this.numbers[this.zahl_1-1])\r\n      console.log(\"zahl_1: %d\", this.zahl_1)\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .CodesErgaenzen{\r\n        background-color: #FFE5B2;\r\n        padding: 20px 20px 20px 20px;\r\n        width: 85%;\r\n        height: auto;\r\n        border-color: black;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n\r\n    img {\r\n      width: auto;\r\n      height: 50px;\r\n    }\r\n\r\n    .kodierungen {\r\n      /*background-color: #7CC7FF;*/\r\n      \r\n    }\r\n\r\n    .kodierungen div {\r\n      /*align-content: left;\r\n      align-items: left;\r\n      text-align: left;*/\r\n      display: flex;\r\n      padding: 10px 0 0 17%;\r\n    }\r\n\r\n    .beschreibung {\r\n      text-align: start;\r\n      padding: 0 0 0 15px !important;\r\n    }\r\n\r\n    input, select {\r\n      padding: 12px 20px;\r\n      margin: 8px 5px 0 0;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    }\r\n\r\n    .auswahl_tag {\r\n      display: block !important;\r\n    }\r\n\r\n    .auswahl {\r\n      display: flex !important;\r\n      padding: 3px 3px 3px 25%;\r\n    }\r\n\r\n    .codes {\r\n      display: flex !important;\r\n      \r\n    }\r\n\r\n    .codes div {\r\n      padding: 0 0 0 0 !important;\r\n    }\r\n\r\n    .zeichenfolge {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    .drop-slot {\r\n      height: 40px;\r\n      width: 60px;\r\n      padding: 0 7px 10px 7px;\r\n      margin: 0 2px 0 0;\r\n      border: 1px solid black;\r\n    }\r\n\r\n    .start-area{\r\n      width: 25%;\r\n      min-height: 30px;\r\n      border: 1px solid black;\r\n      margin: 0 auto;\r\n    }\r\n\r\n</style>"]}]}