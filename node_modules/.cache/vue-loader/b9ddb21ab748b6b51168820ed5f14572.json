{"remainingRequest":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen.vue?vue&type=template&id=37211a99&scoped=true&ts=true","dependencies":[{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen.vue","mtime":1634203151950},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9IkNvZGVzRXJzdGVsbGVuIj4NCiAgICA8cm91dGVyLWxpbmsgdG89Ii8iPkhhdXB0bWVuw7w8L3JvdXRlci1saW5rPiA8YnI+IDxicj4NCiAgICANCg0KICAgICAgPGZvcm0gQHN1Ym1pdC5wcmV2ZW50PSJzdWJtaXRBbnN3ZXIoKSAiPg0KICAgICAgICA8IS0tIDxpbnB1dCB2LW1vZGVsPSJwcm9wXzEiIHR5cGU9Im51bWJlciIgLz4NCiAgICAgICAgPGlucHV0IHYtbW9kZWw9InByb3BfMiIgdHlwZT0ibnVtYmVyIiAvPg0KICAgICAgICA8aW5wdXQgdi1tb2RlbD0icHJvcF8zIiB0eXBlPSJudW1iZXIiIC8+DQogICAgICAgIC0tPg0KICAgICAgICA8cD4NCiAgICAgICAgICA8YnV0dG9uIEBjbGljaz0ic3VibWl0QW5zd2VyKCkiDQogICAgICAgICAgICB0eXBlPSJidXR0b24iDQogICAgICAgICAgPg0KICAgICAgICAgIFByw7xmZSBBbnR3b3J0DQogICAgICAgICAgPC9idXR0b24+DQogICAgICAgIDwvcD4NCiAgICAgIDwvZm9ybT4NCg0KICAgICAgPHAgdi1pZj0ic3VibWl0dGVkIj5EaWUgQW50d29ydCBpc3Qge3tyZXN1bHR9fTwvcD4NCg0KICAgIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\musli\\OneDrive\\ETH\\bsc_arbeit\\code\\algo-lernplattform\\src\\views\\TopSortErkennen.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;MAGlD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,CAAC,CAAC;QACF,CAAC,CAAC;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd;UACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEN,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEnD,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/musli/OneDrive/ETH/bsc_arbeit/code/algo-lernplattform/src/views/TopSortErkennen.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"CodesErstellen\">\r\n    <router-link to=\"/\">Hauptmen체</router-link> <br> <br>\r\n    \r\n\r\n      <form @submit.prevent=\"submitAnswer() \">\r\n        <!-- <input v-model=\"prop_1\" type=\"number\" />\r\n        <input v-model=\"prop_2\" type=\"number\" />\r\n        <input v-model=\"prop_3\" type=\"number\" />\r\n        -->\r\n        <p>\r\n          <button @click=\"submitAnswer()\"\r\n            type=\"button\"\r\n          >\r\n          Pr체fe Antwort\r\n          </button>\r\n        </p>\r\n      </form>\r\n\r\n      <p v-if=\"submitted\">Die Antwort ist {{result}}</p>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'SfErstellen',\r\n  components: {\r\n    \r\n  },\r\n  data() {\r\n    return {\r\n      numbers: [] as number[][],\r\n      anz_tage: 3,\r\n      seq_numbers: [] as number[][],\r\n      number_set: [] as boolean[][],\r\n      number_seq_set: [] as boolean[][],\r\n      abstand: 2,\r\n      zahl_1: 0,\r\n      zahl_2: 0,\r\n      zahl_3: 0,\r\n      prop_1: 0,\r\n      prop_2: 0,\r\n      prop_3: 0,\r\n      submitted: false as boolean,\r\n      result: \"falsch.\",\r\n      selected_1: \"\",\r\n      selected_2: \"\",\r\n      selected_3: \"\"\r\n    }\r\n  },\r\n  created: function(){\r\n    this.createNumbers()\r\n  },\r\n  props: {\r\n    msg: String\r\n  },\r\n  methods : {\r\n    submitAnswer(){\r\n      this.submitted = true\r\n      this.checkAnswer()\r\n    },\r\n    toggleNumber(i: number, j: number){\r\n      if(this.numbers[i][j]==0){\r\n        this.numbers[i][j] = 1\r\n      } else {\r\n        this.numbers[i][j] = 0\r\n      }\r\n    },\r\n    translate_code(str: string){\r\n      if(str == \"Es wird sonnig.\"){\r\n        return 1\r\n      } else if(str == \"Es wird regnen.\"){\r\n        return 2\r\n      } else {\r\n        return 3;\r\n      }\r\n    },\r\n    checkAnswer(){\r\n      let k = 0\r\n      let j = 1\r\n      let abstand_0_1 = 0\r\n      for(let i = 0; i < 5; i++){\r\n        if(this.numbers[k][i] != this.numbers[j][i]){\r\n          abstand_0_1++\r\n        }\r\n      }\r\n\r\n      k = 1\r\n      j = 2\r\n      let abstand_1_2 = 0\r\n      for(let i = 0; i < 5; i++){\r\n        if(this.numbers[k][i] != this.numbers[j][i]){\r\n          abstand_1_2++\r\n        }\r\n      }\r\n\r\n      k = 0\r\n      j = 2\r\n      let abstand_0_2 = 0\r\n      for(let i = 0; i < 5; i++){\r\n        if(this.numbers[k][i] != this.numbers[j][i]){\r\n          abstand_0_2++\r\n        }\r\n      }\r\n      if(abstand_0_1 >= this.abstand && abstand_1_2 >= this.abstand && abstand_0_2 >= this.abstand){\r\n        this.result = \"korrekt.\"\r\n      }\r\n      else {\r\n        this.result = \"falsch.\"\r\n      }\r\n      //console.log(\"abst채nde sind: 0 und 1: %d, 1 und 2: %d, 0 und 2: %d\", abstand_0_1, abstand_1_2, abstand_0_2)\r\n    },\r\n\r\n    no_duplicates(){\r\n      //dieses programm checkt, ob doppelte codes existieren und gibt true false aus, wenn es keine gibt\r\n      //fine_1 ist true, wenn code 1 und 2 sich an mind. einer stelle unterscheiden\r\n      //fine_2 ist true, wenn code 1 und 3 sich an mind. einer stelle unterscheiden\r\n      //fine_3 ist true, wenn code 2 und 3 sich an mind. einer stelle unterscheiden\r\n      let fine_1 = false\r\n      for(let i = 0; i < 5; i++){\r\n        fine_1 = fine_1 || (this.numbers[0][i] != this.numbers[1][i])\r\n      }\r\n\r\n      let fine_2 = false\r\n      for(let i = 0; i < 5; i++){\r\n        fine_2 = fine_2 || (this.numbers[0][i] != this.numbers[2][i])\r\n      }\r\n\r\n      let fine_3 = false\r\n      for(let i = 0; i < 5; i++){\r\n        fine_3 = fine_3 || (this.numbers[1][i] != this.numbers[2][i])\r\n      }\r\n\r\n      return fine_1 && fine_2 && fine_3\r\n    },\r\n    \r\n    createNumbers(){\r\n      //zuerst wollen wir das array \"numbers\" bef체llen\r\n      let new_array_o: number[][]\r\n      new_array_o = []\r\n      for(let i = 0; i < 3; i++){\r\n        let new_array = []\r\n        for(let i = 0; i < 5; i++){\r\n          //new_array.push(Math.round(Math.random()))\r\n          new_array.push(0)\r\n        }\r\n        new_array_o.push(new_array)\r\n      }\r\n      this.numbers = new_array_o\r\n    }\r\n  }\r\n});\r\n</script>\r\n<style scoped>\r\n    .CodesErstellen{\r\n        background-color: #FFE5B2;\r\n        padding: 20px 20px 20px 20px;\r\n        width: 85%;\r\n        height: auto;\r\n        border-color: black;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n\r\n    img {\r\n      width: auto;\r\n      height: 50px;\r\n    }\r\n\r\n    .kodierungen {\r\n      /*background-color: #7CC7FF;*/\r\n      \r\n    }\r\n\r\n    .kodierungen div {\r\n      /*align-content: left;\r\n      align-items: left;\r\n      text-align: left;*/\r\n      display: flex;\r\n      padding: 10px 0 0 17%;\r\n    }\r\n\r\n    .beschreibung {\r\n      text-align: start;\r\n      padding: 0 0 0 15px !important;\r\n    }\r\n\r\n    input, select {\r\n      padding: 12px 20px;\r\n      margin: 8px 5px 0 0;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    }\r\n\r\n    .auswahl_tag {\r\n      display: block !important;\r\n    }\r\n\r\n    .auswahl {\r\n      display: flex !important;\r\n      padding: 3px 3px 3px 25%;\r\n    }\r\n\r\n    .codes {\r\n      display: flex !important;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .codes div {\r\n      padding: 0 0 0 0 !important;\r\n    }\r\n\r\n    .zeichenfolge {\r\n      display: flex !important;\r\n      flex-wrap: wrap;\r\n      padding: 0 0 0 10% !important;\r\n    }\r\n\r\n</style>\r\n"]}]}